local Rayfield = loadstring(game:HttpGet('https://raw.githubusercontent.com/shlexware/Rayfield/main/source'))()

-- Window dum

local Window = Rayfield:CreateWindow({
    Name = "Project SU:R",
    LoadingTitle = "Život je hořký, nesnaž se.",
    LoadingSubtitle = "by Maty",
    ConfigurationSaving = {
       Enabled = false,
       FolderName = nil,
       FileName = "ProjectSUR"
    },
    Discord = {
       Enabled = false,
       Invite = "X",
       RememberJoins = true
    },
    KeySystem = false,
    KeySettings = {
       Title = "Project SU:R",
       Subtitle = "by Maty",
       Note = "Je to divný, ne že ne.",
       FileName = "PROJECTSUR",
       SaveKey = true,
       GrabKeyFromSite = false,
       Key = "Test Key"
    }
 })

 Rayfield:Notify({
    Title = "Project SU:R",
    Content = "by Maty \ >> Welcome!",
    Duration = 3,
    Image = 4483362458,
})

-- PATH

local IdiotPath = game:service"Workspace".Map.NPCs

-- getgenvs check

if getgenv().EAoAuAx then getgenv().EAoAuAx = false end
if getgenv().AutoChargedArrowUse then getgenv().AutoChargedArrowUse = false end
if getgenv().AutoStandArrowUse then getgenv().AutoStandArrowUse = false end
if getgenv().AutoRokakakaUse then getgenv().AutoRokakakaUse = false end

-- Tabs and their sections

local MainTab = Window:CreateTab("Main Functions", 4483362458)
local MainAutoSection = MainTab:CreateSection("Automation")
local MainAutoSectionAutoStandArrowT = MainTab:CreateToggle({
    Name = "Auto Stand Arrow Use",
    CurrentValue = false,
    Flag = "X",
    Callback = function(Value)
        getgenv().AutoStandArrowUse = Value
        if getgenv().AutoStandArrowUse then
            AutoStandArrowUseShitF()
        end
    end,
 })
AutoStandArrowUseShitF = function()
    while wait() do
        if getgenv().AutoStandArrowUse then
            if game:service"Workspace".Living:FindFirstChild(game:service"Players".LocalPlayer.Name) then
                if game:service"Workspace".Living[game:service"Players".LocalPlayer.Name]:FindFirstChild("Stand Arrow") then
                    game:service"Workspace".Living[game:service"Players".LocalPlayer.Name]["Stand Arrow"].Use:FireServer()
                end
            end
        end
    end
end
game:service"Workspace".Living.ChildAdded:Connect(function(X) wait(2) if getgenv().AutoStandArrowUse then if X.Name == game:service"Players".LocalPlayer.Name then AutoStandArrowUseShitF() end end end)
local MainAutoSectionAutoChargedArrowT = MainTab:CreateToggle({
    Name = "Auto Charged Arrow Use",
    CurrentValue = false,
    Flag = "X",
    Callback = function(Value)
        getgenv().AutoChargedArrowUse = Value
        if getgenv().AutoChargedArrowUse then
            AutoChargedArrowUseShitF()
        end
    end,
})
AutoChargedArrowUseShitF = function()
    while wait() do
        if getgenv().AutoChargedArrowUse then
            if game:service"Workspace".Living:FindFirstChild(game:service"Players".LocalPlayer.Name) then
                if game:service"Workspace".Living[game:service"Players".LocalPlayer.Name]:FindFirstChild("Charged Arrow") then
                    game:service"Workspace".Living[game:service"Players".LocalPlayer.Name]["Charged Arrow"].Use:FireServer()
                end
            end
        end
    end
end
game:service"Workspace".Living.ChildAdded:Connect(function(X) wait(2) if getgenv().AutoChargedArrowUse then if X.Name == game:service"Players".LocalPlayer.Name then AutoChargedArrowUseShitF() end end end)

local AutoRokakakaUse = false
local AutoRokakakaUseConfirm = false
bypasscallbackerror = function()
    MainAutoSectionAutoRoakakakaT:Set(false)
end
local MainAutoSectionAutoRoakakakaT = MainTab:CreateToggle({
    Name = "Auto Rokakaka Use",
    CurrentValue = false,
    Flag = "X",
    Callback = function(Value)
        if Value then
            if AutoRokakakaUseConfirm == false then
                bypasscallbackerror(false)
                Rayfield:Notify({
                    Title = "Warning",
                    Content = "You enabled Auto Rokakaka, be careful!\nDue to security reasons you are required to confirm your action.",
                    Duration = 6.5,
                    Image = 4483362458,
                    Actions = {
                    Ignore = {
                        Name = "Enable",
                        Callback = function()
                            AutoRokakakaUseConfirm = true
                            bypasscallbackerror(true)
                            getgenv().AutoRokakakaUse = true
                        end,
                        },
                        Ignore2 = {
                            Name = "Disable",
                            Callback = function()
                                AutoRokakakaUseConfirm = false
                                getgenv().AutoRokakakaUse = false
                            end,
                        }
                    },
                })
                AutoRokakakaShitF()
            end
        else
            getgenv().AutoRokakakaUse = false
            AutoRokakakaUseConfirm = false
        end
    end,
})
bypasscallbackerror = function(val)
    MainAutoSectionAutoRoakakakaT:Set(val)
end
AutoRokakakaShitF = function()
    while wait() do
        if getgenv().AutoRokakakaUse then
            if game:service"Workspace".Living:FindFirstChild(game:service"Players".LocalPlayer.Name) then
                if game:service"Workspace".Living[game:service"Players".LocalPlayer.Name]:FindFirstChild("Rokakaka") then
                    game:service"Workspace".Living[game:service"Players".LocalPlayer.Name]["Rokakaka"].Use:FireServer()
                end
            end
        end
    end
end
game:service"Workspace".Living.ChildAdded:Connect(function(X) wait(2) if getgenv().AutoRokakakaUse then if X.Name == game:service"Players".LocalPlayer.Name then AutoRokakakaShitF() end end end)

local MainSectionDopdownAutoS = "Rokakaka"
local MainSectionDopdownAuto = MainTab:CreateDropdown({
    Name = "Select Item To Drop >>",
    Options = {"Rokakaka", "Stand Arrow", "Charged Arrow", "Requiem Arrow"},
    CurrentOption = "Rokakaka",
    Flag = "X",
    Callback = function(Option)
        MainSectionDopdownAutoS = Option
    end,
})
local MainSectionSlideAutoS = 1
local MainSectionSlideAuto = MainTab:CreateSlider({
    Name = "Select The Ammount",
    Range = {1, 100},
    Increment = 1,
    Suffix = "",
    CurrentValue = 1,
    Flag = "X",
    Callback = function(Value)
        MainSectionSlideAutoS = Value
    end,
})
local MainSectionInputS = ""
local MainSectionInput = MainTab:CreateInput({
   Name = "Enter Username",
   PlaceholderText = "Username",
   RemoveTextAfterFocusLost = false,
   Callback = function(Text)
       MainSectionInputS=Text
   end,
})
local MainSectionAutoButton = MainTab:CreateButton({
    Name = "Drop",
    Callback = function()
        for i = 1,MainSectionSlideAutoS do
            if game:service"Players".LocalPlayer.Backpack:FindFirstChild(MainSectionDopdownAutoS) then
                local a = game:service"Players".LocalPlayer.Backpack:FindFirstChild(MainSectionDopdownAutoS)
                game:service"Players".LocalPlayer.Character.Humanoid:EquipTool(a)
                game:service"Players":Chat("/dropitem")
            end
            wait(.1)
        end
    end,
})
local MainSectionAutoButton2 = MainTab:CreateButton({
    Name = "Handitem",
    Callback = function()
        for i = 1,MainSectionSlideAutoS do
            if game:service"Players".LocalPlayer.Backpack:FindFirstChild(MainSectionDopdownAutoS) then
                if game:service"Players":FindFirstChild(MainSectionInputS) then
                    local a = game:service"Players".LocalPlayer.Backpack:FindFirstChild(MainSectionDopdownAutoS)
                    game:service"Players".LocalPlayer.Character.Humanoid:EquipTool(a)
                    game:service"Players":Chat("/handitem "..MainSectionInputS)
                else
                    Rayfield:Notify({
                        Title = "Warning",
                        Content = "Invalid Username!",
                        Duration = 6.5,
                        Image = 4483362458,
                    })
                    break
                end
            end
            wait(.1)
        end
    end,
})

local MainAutoSection2 = MainTab:CreateSection("Item Farm")
local MainItemMethodDropdownMethodString = ""
local MainItemMethodDropdown = MainTab:CreateDropdown({
    Name = "Select Farming Method >>",
    Options = {"Method 1","Method 2"},
    CurrentOption = "Method 1",
    Flag = "X",
    Callback = function(Option)
        MainItemMethodDropdownMethodString = Option
    end,
})
 local MainAutoSection3 = MainTab:CreateSection("Notifications")
 local MainAutoSection3JotaroOverHeavenNTS = false
 local MainAutoSection3JotaroOverHeavenNT = MainTab:CreateToggle({
    Name = "Jotaro Over Heaven Spawn Notification",
    CurrentValue = false,
    Flag = "X",
    Callback = function(Value)
        MainAutoSection3JotaroOverHeavenNTS = Value
    end,
 })
 game:service"Workspace".Living.ChildAdded:Connect(function(X)
    if MainAutoSection3JotaroOverHeavenNTS then
        if X.Name == "Jotaro Over Heaven" then
            Rayfield:Notify({
                Title = "Spawn Notification",
                Content = "Jotaro Over Heaven have been spawned!",
                Duration = 6.5,
                Image = 4483362458,
                Actions = {
                Ignore = {
                    Name = "Teleport",
                    Callback = function()
                        for _UWU_,_MILO_ in pairs(IdiotPath.Idiot:GetChildren()) do
                            if _MILO_:FindFirstChild("Head") then
                                if _MILO_.Head:FindFirstChild("Main") then
                                    if _MILO_.Head.Main.Text.Text == "i_stabman [Lvl. 90+]" then
                                        _MILO_.Done:FireServer()
                                    end
                                end
                            end
                        end
                    end,
                    },
                Ignore2 = {
                    Name = "Alright",
                    Callback = function()
                    end,
                    },
                },
            })
        end
    end
end)
 local MainAutoSection3JohnnyJoestarNTS = false
 local MainAutoSection3JohnnyJoestarNT = MainTab:CreateToggle({
    Name = "Johnny Joestar Spawn Notification",
    CurrentValue = false,
    Flag = "X",
    Callback = function(Value)
        MainAutoSection3JohnnyJoestarNTS = Value
    end,
 })
game:service"Workspace".Living.ChildAdded:Connect(function(X)
    if MainAutoSection3JohnnyJoestarNTS then
        if X.Name == "JohnnyJoestar" then
            Rayfield:Notify({
                Title = "Spawn Notification",
                Content = "Johnny Joestar have been spawned!",
                Duration = 6.5,
                Image = 4483362458,
                Actions = {
                Ignore = {
                    Name = "Teleport",
                    Callback = function()
                        game:service"Players".LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-8.53429699, 66.9272919, -268.155212, -0.00210160529, 2.08467155e-09, -0.999997795, 4.68771795e-08, 1, 1.98615857e-09, 0.999997795, -4.6872902e-08, -0.00210160529)
                    end,
                    },
                Ignore2 = {
                    Name = "Alright",
                    Callback = function()
                    end,
                    },
                },
            })
        end
    end
end)
 local MainAutoSection3RareItemsNTS = false
 local MainAutoSection3RareItemsNT = MainTab:CreateToggle({
    Name = "Rare Items Spawn Notification",
    CurrentValue = false,
    Flag = "X",
    Callback = function(Value)
        MainAutoSection3RareItemsNTS = Value
    end,
})
game:service"Workspace".Items.ChildAdded:Connect(function(x)
    if MainAutoSection3RareItemsNTS then
        if x.Name == "Red Stone Of Aja Mask" or x.Name == "Kar's Mask" or x.Name == "Dio's Diary" or x.Name == "Rainbow Ornament" then
            Rayfield:Notify({
                Title = "Spawn Notification",
                Content = x.Name.." have been spawned!",
                Duration = 6.5,
                Image = 4483362458,
                Actions = {
                Ignore = {
                    Name = "Teleport",
                    Callback = function()
                        if x then
                            game:service"Players".LocalPlayer.Character.HumanoidRootPart.CFrame = x.Handle.CFrame
                        end
                    end,
                    },
                Ignore2 = {
                    Name = "Alright",
                    Callback = function()
                    end,
                    },
                },
            })
        end
    end
end)

local MainAutoSection4 = MainTab:CreateSection("Auto Buy")
local MainAutoSection4SliderAmmount = 1
local MainAutoSection4Slider = MainTab:CreateSlider({
    Name = "Select The Ammount",
    Range = {1, 100},
    Increment = 1,
    Suffix = "",
    CurrentValue = 1,
    Flag = "X",
    Callback = function(Value)
        MainAutoSection4SliderAmmount = Value
        updateammountvaluedum()
    end,
 })
 local MainAutoSection4DropdownString = "Rokakaka Fruit(2.75k)"
 local MainAutoSection4Dropdown = MainTab:CreateDropdown({
     Name = "Select The Item >>",
     Options = {"Rokakaka Fruit(2.75k)","Stand Arrow(4k)","Charged Arrow(50k)","Requiem Arrow(1.5M)","Dio Diary(1.5M)","5x Rokakaka(13.75k)","5x Stand Arrow(20k)", "5x Charged Arrow(225k)"},
     CurrentOption = "Rokakaka Fruit(2.75k)",
     Flag = "X",
     Callback = function(Option)
        MainAutoSection4DropdownString = Option
        updateammountvaluedum()
     end,
})
local MainAutoSection4Label = MainTab:CreateLabel("$ 2750")
local MainAutoSection4Button = MainTab:CreateButton({
    Name = "Buy",
    Callback = function()
        if MainAutoSection4DropdownString == "Rokakaka Fruit(2.75k)" then for i = 1,MainAutoSection4SliderAmmount do game:GetService("ReplicatedStorage").Events.BuyItem:FireServer("Merchant1", "Option2") end end
        if MainAutoSection4DropdownString == "5x Rokakaka(13.75k)" then for i = 1,MainAutoSection4SliderAmmount do game:GetService("ReplicatedStorage").Events.BuyItem:FireServer("Merchant1", "Option1") end end
        if MainAutoSection4DropdownString == "Stand Arrow(4k)" then for i = 1,MainAutoSection4SliderAmmount do game:GetService("ReplicatedStorage").Events.BuyItem:FireServer("Merchant1", "Option4") end end
        if MainAutoSection4DropdownString == "5x Stand Arrow(20k)" then for i = 1,MainAutoSection4SliderAmmount do game:GetService("ReplicatedStorage").Events.BuyItem:FireServer("Merchant1", "Option3") end end
        if MainAutoSection4DropdownString == "Charged Arrow(50k)" then for i = 1,MainAutoSection4SliderAmmount do game:GetService("ReplicatedStorage").Events.BuyItem:FireServer("Merchantlvl120", "Option2") end end
        if MainAutoSection4DropdownString == "5x Charged Arrow(225k)" then for i = 1,MainAutoSection4SliderAmmount do game:GetService("ReplicatedStorage").Events.BuyItem:FireServer("Merchantlvl120", "Option1") end end
        if MainAutoSection4DropdownString == "Dio Diary(1.5M)" then for i = 1,MainAutoSection4SliderAmmount do game:GetService("ReplicatedStorage").Events.BuyItem:FireServer("Merchantlvl120", "Option3") end end
        if MainAutoSection4DropdownString == "Requiem Arrow(1.5M)" then for i = 1,MainAutoSection4SliderAmmount do game:GetService("ReplicatedStorage").Events.BuyItem:FireServer("Merchantlvl120", "Option4") end end
    end,
})
updateammountvaluedum = function()
    local vals = { ["Rokakaka Fruit(2.75k)"] = 2750; ["5x Rokakaka(13.75k)"] = 13750; ["Stand Arrow(4k)"] = 4000; ["5x Stand Arrow(20k)"] = 20000; ["Charged Arrow(50k)"] = 50000; ["5x Charged Arrow(225k)"] = 225000; ["Dio Diary(1.5M)"] = 1500000; ["Requiem Arrow(1.5M)"] = 1500000; }
    local calc2 = vals[MainAutoSection4DropdownString]
    local calc1 = calc2 * MainAutoSection4SliderAmmount
    MainAutoSection4Label:Set("$ "..calc1)
end

local MainSectionLazy = MainTab:CreateSection("Stand Autofarm")
function find(t,r)
    for i,v in pairs(t)do
        if v==r then return true end
    end
   return false
end
local WhitelistedAttributes = {}
MainTab:CreateLabel("Select Arrow Type")
local MainSectionLazyB2
local CurrentMainSectionLazyArrowType = ""
local MainSectionLazyB1 = MainTab:CreateToggle({
    Name = "Stand Arrow",
    CurrentValue = false,
    Flag = "X",
    Callback = function(Value)
        if Value then
            CurrentMainSectionLazyArrowType="Stand Arrow"
            MainSectionLazyB2:Set(false)
        elseif Value == false and CurrentMainSectionLazyArrowType == "Stand Arrow" then
            CurrentMainSectionLazyArrowType=""
        end
    end,
})
MainSectionLazyB2 = MainTab:CreateToggle({
    Name = "Charged Arrow",
    CurrentValue = false,
    Flag = "X",
    Callback = function(Value)
        if Value then
            CurrentMainSectionLazyArrowType="Charged Arrow"
            MainSectionLazyB1:Set(false)
        elseif Value == false and CurrentMainSectionLazyArrowType == "Charged Arrow" then
            CurrentMainSectionLazyArrowType=""
        end
    end,
})
MainTab:CreateLabel("Select Attributes")
local MainSectionLazyB = MainTab:CreateToggle({
    Name = "None",
    CurrentValue = false,
    Flag = "X",
    Callback = function(Value)
        if Value then
            if find(WhitelistedAttributes, "None") then
            else
                table.insert(WhitelistedAttributes, "None")
            end
            for i,v in pairs(WhitelistedAttributes) do
                print(v)
            end
        else
            if find(WhitelistedAttributes, "None") then
                for i,v in pairs(WhitelistedAttributes) do
                    if v == "None" then
                        table.remove(WhitelistedAttributes,i)
                    end
                end
            end
            for i,v in pairs(WhitelistedAttributes) do
                print(v)
            end
        end
    end,
})
local MainSectionLazyBB = MainTab:CreateToggle({
    Name = "Daemon",
    CurrentValue = false,
    Flag = "X",
    Callback = function(Value)
        if Value then
            if find(WhitelistedAttributes, "Daemon") then
            else
                table.insert(WhitelistedAttributes, "Daemon")
            end
            for i,v in pairs(WhitelistedAttributes) do
                print(v)
            end
        else
            if find(WhitelistedAttributes, "Daemon") then
                for i,v in pairs(WhitelistedAttributes) do
                    if v == "Daemon" then
                        table.remove(WhitelistedAttributes,i)
                    end
                end
            end
            for i,v in pairs(WhitelistedAttributes) do
                print(v)
            end
        end
    end,
})
local MainSectionLazyBBB = MainTab:CreateToggle({
    Name = "Legendary",
    CurrentValue = false,
    Flag = "X",
    Callback = function(Value)
        if Value then
            if find(WhitelistedAttributes, "Legendary") then
            else
                table.insert(WhitelistedAttributes, "Legendary")
            end
            for i,v in pairs(WhitelistedAttributes) do
                print(v)
            end
        else
            if find(WhitelistedAttributes, "Legendary") then
                for i,v in pairs(WhitelistedAttributes) do
                    if v == "Legendary" then
                        table.remove(WhitelistedAttributes,i)
                    end
                end
            end
            for i,v in pairs(WhitelistedAttributes) do
                print(v)
            end
        end
    end,
})
MainTab:CreateLabel("Toggle")
local MainSectionLazyBBBB = MainTab:CreateToggle({
    Name = "Enable Autofarm",
    CurrentValue = false,
    Flag = "X",
    Callback = function(Value)
        getgenv().EAoAuAx = Value
        if Value then
            AutofarmStandShit()
        end
    end,
})
AutofarmStandShit = function()
    if getgenv().EAoAuAx then
        if not(CurrentMainSectionLazyArrowType == "") then
            if game:service"Players".LocalPlayer.Data.Stand.Value == "None" then
                if not(CurrentMainSectionLazyArrowType == "") then
                    if game:service"Players".LocalPlayer.Backpack:FindFirstChild(CurrentMainSectionLazyArrowType) then
                        game:service"Players".LocalPlayer.Character.Humanoid:EquipTool(game:service"Players".LocalPlayer.Backpack:FindFirstChild(CurrentMainSectionLazyArrowType))
                        game:service"Players".LocalPlayer.Character[CurrentMainSectionLazyArrowType].Use:FireServer()
                    else
                        getgenv().EAoAuAx = false
                        MainSectionLazyBBBB:Set(false)
                        Rayfield:Notify({
                            Title = "Stand Autofarm Notification",
                            Content = "You ran out of "..CurrentMainSectionLazyArrowType.."!",
                            Duration = 6.5,
                            Image = 4483362458,
                            Actions = {
                                Ignore = {
                                    Name = "Alright",
                                    Callback = function()
                                    end,
                                },
                            },
                        })
                    end
                end
            end
            if not(game:service"Players".LocalPlayer.Data.Stand.Value == "None") then
                if not(find(WhitelistedAttributes, game:service"Players".LocalPlayer.Data.Attri.Value)) then
                    if game:service"Players".LocalPlayer.Backpack:FindFirstChild("Rokakaka") then
                        game:service"Players".LocalPlayer.Character.Humanoid:EquipTool(game:service"Players".LocalPlayer.Backpack:FindFirstChild("Rokakaka"))
                        game:service"Players".LocalPlayer.Character["Rokakaka"].Use:FireServer()
                    else
                        getgenv().EAoAuAx = false
                        MainSectionLazyBBBB:Set(false)
                        Rayfield:Notify({
                            Title = "Stand Autofarm Notification",
                            Content = "You ran out of Rokakakas!",
                            Duration = 6.5,
                            Image = 4483362458,
                            Actions = {
                                Ignore = {
                                    Name = "Alright",
                                    Callback = function()
                                    end,
                                },
                            },
                        })
                    end
                end
            end
        else
            getgenv().EAoAuAx = false
            MainSectionLazyBBBB:Set(false)
            Rayfield:Notify({
                Title = "Stand Autofarm Notification",
                Content = "Select Stand Arrow Type!",
                Duration = 6.5,
                Image = 4483362458,
            })
        end
    end
end
game:service"Players".LocalPlayer.Data.Stand.Changed:Connect(function() if getgenv().EAoAuAx then wait(2) AutofarmStandShit() end end)
game:service"Players".LocalPlayer.Data.Attri.Changed:Connect(function() if getgenv().EAoAuAx then wait(2) AutofarmStandShit() end end)
game:service"Workspace".Living.ChildAdded:Connect(function(x) if getgenv().EAoAuAx then if x.Name == game:service"Players".LocalPlayer.Name then getgenv().EAoAuAx = false MainSectionLazyBBBB:Set(false) end end end)

local MainSection5 = MainTab:CreateSection("Lair Quest Autofarm")
local MainSection5ToggleLairImpossibleT = false
local MainSection5ToggleLairImpossible = MainTab:CreateToggle({
    Name = "Lair Quest Lvl. 200+",
    CurrentValue = false,
    Flag = "X",
    Callback = function(Value)
        MainSection5ToggleLairImpossibleT = Value
        if MainSection5ToggleLairImpossibleT then
            autofarmshitdumass("Boss")
        end
    end,
})
autofarmshitdumass = function(dumbass)
    for _UWU_,_MILO_ in pairs(IdiotPath:GetChildren()) do
        if _MILO_:FindFirstChild("Head") then
            if _MILO_.Head:FindFirstChild("Main") then
                if _MILO_.Head.Main.Text.Text == "i_stabman [Lvl. 200+]" then
                    _MILO_.Done:FireServer()
                end
            end
        end
    end
    wait(4)
    while MainSection5ToggleLairImpossibleT do
        if game:service"Workspace".Living[game:service"Players".LocalPlayer.Name].Aura.Value == false then game:service"Workspace".Living[game:service"Players".LocalPlayer.Name].StandEvents.Summon:FireServer() end
        for pussy,cock in pairs(game:service"Workspace".Living:GetChildren()) do
          if cock.Name == dumbass and cock:FindFirstChild("Head") then
            if cock.Head:FindFirstChild"Display" then
                if cock.Head.Display.Frame.t.Text == "Jotaro P6 [Dungeon]" then
                    if game:service"Players".LocalPlayer.Character:FindFirstChild("Humanoid") then
                        if game:service"Players".LocalPlayer.Character.Humanoid.Health >= 1 then
                            game:service"Players".LocalPlayer.Character.HumanoidRootPart.CFrame = cock.HumanoidRootPart.CFrame * CFrame.new(0,0,7)
                            game:service"Workspace".Living[game:service"Players".LocalPlayer.Name].StandEvents.M1:FireServer()
                            game:service"Workspace".Living[game:service"Players".LocalPlayer.Name].StandEvents.Heavy:FireServer()
                            wait()
                        end
                    end
                end
            end
          end
       end wait()
    end
end
game:service"Workspace".Living.ChildAdded:Connect(function(x)
    if MainSection5ToggleLairImpossibleT then
        if x.Name == game:service"Players".LocalPlayer.Name then
            autofarmshitdumass("Boss")
        end
    end
end)

local MainSection7 = MainTab:CreateSection("Quest Autofarm")
local MainSection7ToggleQuestPillarMenT = false
local MainSection7ToggleQuestPillarMen = MainTab:CreateToggle({
    Name = "Pillermen Quest Lvl. 300+",
    CurrentValue = false,
    Flag = "X",
    Callback = function(Value)
        MainSection7ToggleQuestPillarMenT = Value
        if MainSection7ToggleQuestPillarMenT then
            autofarmpillarmenshit()
        end
    end,
})
autofarmpillarmenshit = function()
    for _UWU_,_MILO_ in pairs(IdiotPath:GetChildren()) do
        if _MILO_:FindFirstChild("Head") then
            if _MILO_.Head:FindFirstChild("Main") then
                if _MILO_.Head.Main.Text.Text == "Young Joseph [Lvl. 300+]" then
                    _MILO_.QuestDone:FireServer()
                    _MILO_.Done:FireServer()
                end
            end
        end
    end
    while MainSection7ToggleQuestPillarMenT do
        if game:service"Workspace".Living[game:service"Players".LocalPlayer.Name].Aura.Value == false then game:service"Workspace".Living[game:service"Players".LocalPlayer.Name].StandEvents.Summon:FireServer() end
        for pussy,cock in pairs(game:service"Workspace".Living:GetChildren()) do
            if cock.Name == "Pillerman" then
                if cock:FindFirstChild("Humanoid") then
                    if not(cock.Humanoid.Health == 0) then
                        game:service"Players".LocalPlayer.Character.HumanoidRootPart.CFrame = cock.HumanoidRootPart.CFrame * CFrame.new(0,0,7)
                        game:service"Workspace".Living[game:service"Players".LocalPlayer.Name].StandEvents.M1:FireServer()
                        game:service"Workspace".Living[game:service"Players".LocalPlayer.Name].StandEvents.Heavy:FireServer()
                        for _UWU_,_MILO_ in pairs(IdiotPath:GetChildren()) do
                            if _MILO_:FindFirstChild("Head") then
                                if _MILO_.Head:FindFirstChild("Main") then
                                    if _MILO_.Head.Main.Text.Text == "Young Joseph [Lvl. 300+]" then
                                        _MILO_.QuestDone:FireServer()
                                        _MILO_.Done:FireServer()
                                    end
                                end
                            end
                        end
                    else
                        game:service"Players".LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(246.663956, 69.8958282, 194.024719, 0.905767024, -0.15422006, 0.394717991, 3.72383946e-09, 0.931430697, 0.363918781, -0.423776031, -0.329625636, 0.843659163)
                    end
                end
            end
        end wait()
    end
end
game:service"Workspace".Living.ChildAdded:Connect(function(x)
    if MainSection7ToggleQuestPillarMenT then
        if x.Name == game:service"Players".LocalPlayer.Name then
            wait(1)
            autofarmpillarmenshit()
        end
    end
end)

local MainSection8 = MainTab:CreateSection("Teleports")
local MainSection8Button = MainTab:CreateButton({
    Name = "Inner Sanctum",
    Callback = function()
        for _UWU_,_MILO_ in pairs(IdiotPath:GetChildren()) do
            if _MILO_:FindFirstChild("Head") then
                if _MILO_.Head:FindFirstChild("Main") then
                    if _MILO_.Head.Main.Text.Text == "i_stabman [Lvl. 90+]" then
                        _MILO_.Done:FireServer()
                    end
                end
            end
        end
    end,
})
local MainSection8Button2 = MainTab:CreateButton({
    Name = "Stand Storage",
    Callback = function()
        for _UWU_,_MILO_ in pairs(IdiotPath:GetChildren()) do
            if _MILO_:FindFirstChild("Head") then
                if _MILO_.Head:FindFirstChild("Sub") then
                    if _MILO_.Head.Sub.Text.Text == "Storage Room" then
                        _MILO_.Done:FireServer()
                    end
                end
            end
        end
    end,
})

local MainSection9 = MainTab:CreateSection("Block Actions")
local MainSection9Button = MainTab:CreateButton({
    Name = "Block All Use Remotes",
    Callback = function()
        local Old; Old = hookmetamethod(game, "__namecall", newcclosure(function(self, ...)
            local Method = getnamecallmethod()
            if Method == "FireServer" and tostring(self) == "Use" then
                return;
            end
            return Old(self, ...)
        end))
    end,
})
local MainAutoSectionAutoStandArrowTV = false
local MainAutoSectionAutoStandArrowT = MainTab:CreateToggle({
    Name = "Block >> Paralyze | Stun",
    CurrentValue = false,
    Flag = "X",
    Callback = function(Value)
        MainAutoSectionAutoStandArrowTV = Value
        if Value then
            BlockParalyzeStunF()
        end
    end,
})
BlockParalyzeStunF = function()
    game:service"Players".LocalPlayer.Character.Humanoid.Changed:Connect(function()
        if MainAutoSectionAutoStandArrowTV then
            if game:service"Players".LocalPlayer.Character.Humanoid.PlatformStand then
                game:service"Players".LocalPlayer.Character.Humanoid.PlatformStand = false
            end
        end
    end)
end
game:service"Workspace".Living.ChildAdded:Connect(function()
    if MainAutoSectionAutoStandArrowTV then
        BlockParalyzeStunF()
    end
end)

local MainSection10 = MainTab:CreateSection("Miscellaneous")
local MainSection10Button = MainTab:CreateButton({
    Name = "Open Stand Storage",
    Callback = function()
        for _UWU_,_MILO_ in pairs(IdiotPath:GetChildren()) do
            if _MILO_:FindFirstChild("Head") then
                if _MILO_.Head:FindFirstChild("Sub") then
                    if _MILO_.Head.Sub.Text.Text == "Stand Storage" then
                        _MILO_.Done:FireServer()
                    end
                end
            end
        end
    end,
})
local MainSection10Button2 = MainTab:CreateButton({
    Name = "Buy Hamon",
    Callback = function()
        for _UWU_,_MILO_ in pairs(IdiotPath:GetChildren()) do
            if _MILO_:FindFirstChild("Head") then
                if _MILO_.Head:FindFirstChild("Main") then
                    if _MILO_.Head.Main.Text.Text == "Hamon Dealer" then
                        _MILO_.Done:FireServer()
                    end
                end
            end
        end
    end,
})
local MainSection10Button2 = MainTab:CreateButton({
    Name = "Buy Spin",
    Callback = function()
        game:service"ReplicatedStorage".Events.buyGyroHorseSpin:FireServer("Spin")
    end,
})

local SettingsTab = Window:CreateTab("Settings", 4483362458)
local SettingsKeybindSection = SettingsTab:CreateSection("Keybinds")

local CreditsTab = Window:CreateTab("Credits", 4483362458)
local CreditsSection = CreditsTab:CreateSection("Credits")
CreditsTab:CreateLabel("Maty >> Coding")
CreditsTab:CreateLabel("Sirius >> UI Library")

local UpdatesTab = Window:CreateTab("Updates", 4483362458)
local UpdatesSection = UpdatesTab:CreateSection("Updates")
UpdatesTab:CreateParagraph({Title = "27.12.2022", Content = "[+] Auto --> Stand Arrow, Charged Arrow, Rokakaka Fruit\n[+] JOH, JJ, Rare Items Spawn Notification\n[!] Due to security reasons you are required to confirm your action when enabling Auto Rokakaka Fruit"})
UpdatesTab:CreateParagraph({Title = "28.12.2022", Content = "[+] Anti Cheat Bypass\n[+] Auto Buy\n[+] Lair Quest Autofarm\n[+] Teleports\n[+] Drop/Hand Items\n[+] Open Stand Storage"})
UpdatesTab:CreateParagraph({Title = "29.12.2022", Content = "[+] Quest Autofarm\n[*] Some things were patched during current game update, all of those things are now working again"})
UpdatesTab:CreateParagraph({Title = "30.12.2022", Content = "[*] Fixed Auto Stand Arrow, Charged Arrow, Rokakaka bugs\n[*] Updated to current game version"})
UpdatesTab:CreateParagraph({Title = "31.12.2022", Content = "[+] Block >> SCR,SCROVA Paralyze, HSP Stun\n[+] Stand Autofarm [!] [W.I.P]"})

local Old; Old = hookmetamethod(game, "__namecall", newcclosure(function(self, ...)
    local Method = getnamecallmethod()
    if Method == "Raycast" or Method == "Kick" or Method == "FireServer" and tostring(self) == "PlayerStandMainHandle" then
        return wait(9e9)
    end
    return Old(self, ...)
end))
for _, Connection in pairs(getconnections(Client.Idled)) do
    Connection:Disable()
end
